name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: tradestore
        ports:
          - 5432:5432

      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

      kafka:
        image: wurstmeister/kafka
        env:
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        ports:
          - 9092:9092

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build & Run Tests
        run: mvn clean test

  docker-build:
    name: Build & Push Docker Image
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t myrepo/tradestore:latest .
          docker tag myrepo/tradestore:latest myrepo/tradestore:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push myrepo/tradestore:latest
          docker push myrepo/tradestore:${{ github.sha }}

  deploy:
    name: Deploy to Server
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull myrepo/tradestore:latest
            docker stop tradestore || true
            docker rm tradestore || true
            docker run -d --name tradestore -p 8080:8080 myrepo/tradestore:latest
